server {
      listen 443 ssl;
      listen    80;
      server_name    {{config.API.hostname}};
      access_log    /var/log/nginx/{{API.name}}.log;
      
      ssl_certificate {{SSL.certificate}};
      ssl_certificate_key {{SSL.certificate_key}};
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

      ssl_prefer_server_ciphers on;
      ssl_ciphers 'DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-CAMELLIA256-SHA:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-CAMELLIA128-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256';

      ssl_session_cache shared:SSL:10m;
      ssl_session_timeout 10m;

      ssl_dhparam {{SSL.dh_param}};
      listen    80;
      server_name    {{API.hostname}};
      
      root    {{API.dir}};
      index $uri $uri/ index.html;
      location /static/ {
          alias  {{API.dir}}/{{API.static_dir}};
      }

      location / {
          proxy_pass http://127.0.0.1:5000;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_read_timeout 60s;
          add_header 'Access-Control-Allow-Origin' {{API.allowed_IPs |join(', ')}};
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          if ($request_method = 'OPTIONS') {
                # Custom headers and headers various browsers *should* be OK with but aren't
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
          if ($request_method = 'POST') {
                add_header 'Content-Type' 'application/json';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          if ($request_method = 'GET') {
                #add_header 'Content-Type' 'application/json';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
      }
}
